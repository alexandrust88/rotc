project_name: uber-k8s

containers:
  terraform:
    build_directory: .batect/azure
    volumes:
      - local: .
        container: /code
        options: cached
      - local: ~/.kube
        container: /root/.kube
        # options: cached
      - local: ~/.azure
        container: /root/.azure
        options: cached
      - local: /var/run/docker.sock
        container: /var/run/docker.sock
    working_directory: /code
    environment: 
      TF_VAR_prefix: $AZURE_PREFIX
  azure_login:
    build_directory: .batect/azure_login
    volumes:
      - local: .
        container: /code
        options: cached
      - local: ~/.azure
        container: /root/.azure
        options: cached
      - local: /var/run/docker.sock
        container: /var/run/docker.sock
    working_directory: /root
    environment: {}
      # AWS_PROFILE: dev
      # AWS_SDK_LOAD_CONFIG: 1
  pulumi:
    build_directory: .batect/azure-pulumi
    volumes:
      - local: .
        container: /code
        options: cached
      - local: ~/.kube
        container: /root/.kube
        # options: cached
      - local: ~/.azure
        container: /root/.azure
        options: cached
      - local: /var/run/docker.sock
        container: /var/run/docker.sock
    working_directory: /code
    environment: 
      AZURE_PREFIX: $AZURE_PREFIX


tasks:
  setup-azure-pulumi:
    description: Setup Azure Backend For Pulumi.
    run:
      container: pulumi
      command: ./scripts/azure/setup-azure-pulumi.sh
  
  destroy-azure-pulumi:
    description: Destroy Azure Backend For Pulumi.
    run:
      container: pulumi
      command: ./scripts/azure/destroy-azure-pulumi.sh

  setup-terraform:
    description: Initialise Terraform.
    run:
      container: terraform
      command: terraform init -input=false -reconfigure cluster/azure
      environment:
        TF_CLI_ARGS: -backend-config="storage_account_name=$AZURE_TF_STORAGE_ACCOUNT"
        
  plan-terraform:
    description: Create a Terraform execution plan to ensure the set of changes matches your expectations.
    run:
      container: terraform
      command: terraform plan -input=false cluster/azure

  apply-terraform:
    description: Run Terraform and post-install tasks to provision infrastructure.
    run:
      container: terraform
      command: terraform apply -input=false -auto-approve cluster/azure

  destroy-terraform:
    description: Run Terraform to decommission infrastructure.
    run:
      container: terraform
      command: terraform destroy -input=false -auto-approve cluster/azure

  shell:
    description: Run a shell in the Terraform environment.
    run:
      container: terraform
      command: bash
      
  pul-shell:
    description: Run a shell in the Terraform environment.
    run:
      container: pulumi
      command: bash

  login_azure:
    description: Login Azure using OKTA. Will override your .azure/credentials file
    run:
      container: azure_login
      command: az login

  aks_credentials:
    run: 
      container: azure_login
      command: "'az aks get-credentials --resource-group $AZURE_PREFIX-k8s-resources --name $AZURE_PREFIX-k8s'"
      entrypoint: '/bin/bash -c'
      environment:
        AZURE_PREFIX: $AZURE_PREFIX

  install-istio:
    prerequisites:
      - aks_credentials
    description: Install istio using istioctl
    run:
      container: terraform
      command: ./scripts/azure/install-istio.sh
      environment:
        AZURE_PREFIX: $AZURE_PREFIX

  pulumi-install-istio:
    prerequisites:
      - aks_credentials
    description: Install istio using istioctl
    run:
      container: pulumi
      command: ./scripts/azure/install-istio.sh
      environment:
        AZURE_PREFIX: $AZURE_PREFIX

  kubectl:
    prerequisites:
      - aks_credentials
    run:
      container: terraform
      command: kubectl
      environment:
        AZURE_PREFIX: $AZURE_PREFIX

  kiali:
    prerequisites:
      - aks_credentials
    run:
      container: terraform
      command: "istioctl dashboard -p 8001 --address 0.0.0.0 kiali"
      ports:
        - local: 8001
          container: 8001

  istioctl:
    prerequisites:
      - aks_credentials
    run:
      container: terraform
      command: "istioctl"


    
