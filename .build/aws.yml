project_name: uber-k8s

containers:
  terraform:
    build_directory: .batect/aws
    volumes:
      - local: .
        container: /code
        options: cached
      - local: ~/.kube/config
        container: /root/.kube/config
        options: cached
      - local: ~/.aws
        container: /root/.aws
        options: cached
      - local: /var/run/docker.sock
        container: /var/run/docker.sock
    working_directory: /code
    environment:
      AWS_PROFILE: dev
      AWS_SDK_LOAD_CONFIG: 1
  aws_login:
    build_directory: .batect/aws_login
    volumes:
      - local: .
        container: /code
        options: cached
      - local: ~/.aws
        container: /root/.aws
        options: cached
      - local: /var/run/docker.sock
        container: /var/run/docker.sock
    working_directory: /root
    environment:
      AWS_PROFILE: dev
      AWS_SDK_LOAD_CONFIG: 1
  pulumi:
    build_directory: .batect/aws-pulumi
    volumes:
      - local: .
        container: /code
        options: cached
      - local: ~/.kube
        container: /root/.kube
        # options: cached
      - local: ~/.aws
        container: /root/.aws
        options: cached
      - local: /var/run/docker.sock
        container: /var/run/docker.sock
    working_directory: /code


tasks:
  setup-terraform:
    description: Initialise Terraform.
    run:
      container: terraform
      command: terraform init -input=false cluster/aws

  setup-pulumi:
    description: Setup AWS Backend For Pulumi.
    run:
      container: pulumi
      command: ./scripts/aws/setup-aws-pulumi.sh

  plan-terraform:
    description: Create a Terraform execution plan to ensure the set of changes matches your expectations.
    run:
      container: terraform
      command: terraform plan -input=false cluster/aws

  apply-terraform:
    description: Run Terraform and post-install tasks to provision infrastructure.
    run:
      container: terraform
      command: terraform apply -input=false -auto-approve cluster/aws

  destroy-terraform:
    description: Run Terraform to decommission infrastructure.
    run:
      container: terraform
      command: terraform destroy -input=false -auto-approve cluster/aws

  shell:
    description: Run a shell in the Terraform environment.
    run:
      container: terraform
      command: bash

  install-istio:
    description: Install istio using istioctl
    run:
      container: terraform
      command: ./scripts/aws/install-istio.sh

  install-prometheus:
    description: Install prometheus using helm
    run:
      container: terraform
      command: ./scripts/aws/install-prometheus.sh

  install-grafana:
    description: Install grafana using helm
    run:
      container: terraform
      command: ./scripts/aws/install-grafana.sh

  login_aws:
    description: Login aws using OKTA. Will override your .aws/credentials file
    run:
      container: aws_login
      command: ./../code/scripts/aws/aws_login.sh
