project_name: uber-k8s

containers:
  terraform:
    build_directory: .batect/terraform
    volumes:
      - local: .
        container: /code
        options: cached
      - local: ~/.kube/config
        container: /root/.kube/config
        options: cached
      - local: .gcloud
        container: /root/.config/gcloud
        options: cached
      - local: /var/run/docker.sock
        container: /var/run/docker.sock
    working_directory: /code
    environment:
      CLUSTER_NAME: k8s-cluster
      CLUSTER_VERSION: 1.15.11-gke.5
      CLUSTER_LOCATION: australia-southeast1-a
      CLOUDSDK_COMPUTE_REGION: australia-southeast1
      CLOUDSDK_CORE_PROJECT: [YOUR_PROJECT_NAME]
      GOOGLE_BILLING_ACCOUNT_ID: [YOUR_BILLING_ID]

tasks:
  setup-gcp:
    description: Configure GCP connection.
    run:
      container: terraform
      command: sh -c 'gcloud auth login && gcloud auth application-default login'

  setup-terraform:
    description: Initialise Terraform.
    run:
      container: terraform
      command: scripts/initialize.sh

  apply-terraform:
    description: Run Terraform to provision infrastructure.
    run:
      container: terraform
      command: sh -c "terraform plan
                        -input=false
                        -var=cluster_location=${CLUSTER_LOCATION}
                        -var=cluster_name=${CLUSTER_NAME}
                        -var=cluster_version=${CLUSTER_VERSION}
                        -var=subnet_region=${CLOUDSDK_COMPUTE_REGION}
                        -out tf.plan
                        cluster &&
                      terraform apply
                        -input=false
                        -auto-approve tf.plan"

  destroy-terraform:
    description: Run Terraform to provision infrastructure.
    run:
      container: terraform
      command: terraform destroy -input=false -auto-approve cluster

  cluster-auth:
    description: Get credential to access the newly created Kubernetes cluster
    run:
      container: terraform
      command: sh -c "gcloud container clusters get-credentials "${CLUSTER_NAME}" --region "${CLUSTER_LOCATION}" --project ${CLOUDSDK_CORE_PROJECT}"

  shell:
    description: Run a shell in the Terraform environment.
    run:
      container: terraform
      command: bash

  grafana:
    description: Enable access to Grafana UI
    run:
      container: terraform
      command: sh -c "echo 'Grafana user:' ; kubectl get secret 
                        --namespace grafana grafana
                        -o jsonpath={.data.admin-user} | base64 -d ; echo ; echo;
                      echo 'Grafana password:' ; kubectl get secret 
                        --namespace grafana grafana
                        -o jsonpath={.data.admin-password} | base64 -d ; echo ; echo;
                      echo 'To start the grafana dashboard, run:'; echo kubectl port-forward 
                        -n grafana 
                        $(kubectl get pod -n grafana -o jsonpath='{.items[0].metadata.name}') 
                        3000"

